#!/usr/bin/env ruby

#This method outputs a greeting for the user and requests their name.
#It returns their name with "gets.chomp"

$clear = `clear`
puts $clear

def greeting
  print "Well Hello! Please type your name: "
  name = gets.chomp.capitalize
  puts "It is nice to greet you #{name}! I am a simple yet sexy calculator application.  \n
  I can add, subtract, multiply, divide, exponential power, or modulus calculation. \n"
  puts "\n"
  name
end


#This method ask the user what type of calculation they would like to perform.
#It returns the operation or an error for errorneous entry.

def request_calculation_type
  puts "Type 1 to add, 2 to subtract, 3 to multiply, 4 to divide, 5 to power to, or 6 for modulus calculation : "
  operation_selection = gets.to_i

  if operation_selection == 1
    "add"
  elsif operation_selection == 2
    "subtract"
  elsif operation_selection == 3
    "multiply"
  elsif operation_selection == 4
    "divide"
  elsif operation_selection == 5
    "exponent"
  elsif operation_selection == 6
    "modulus"
  else
    "error"
  end
end

#This method performs the requested calculation.
#It returns the result of the calculation.

def calculate_answer(operator, a, b)
  if operator == "add"
    a + b 
  elsif operator == "subtract"
    a - b
  elsif operator == "multiply"
    a * b
  elsif operator == "divide"
    a / b
  elsif operator == "exponent"
    a ** b
  elsif operator == "modulus"
    a % b
 end
end

name = greeting
run_calculator = 1

while run_calculator == 1

  current_calculation = request_calculation_type()

  if current_calculation == "error"
    puts "I do not understand this type of calculation...Try the fuck again!"

  else
    puts "What is the first number you would like to #{current_calculation}: "
    first_number = gets.to_i
    puts "What is the second number you would like to #{current_calculation}: "
    second_number = gets.to_i

    answer = calculate_answer(current_calculation, first_number, second_number)

    puts "The answer is #{answer}."
    puts "Type 1 to run another calculation, or 2 to end: "
    run_calculator = gets.to_i
  end
end
